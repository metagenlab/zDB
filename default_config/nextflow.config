
////////////////////
///// INPUT ////////
////////////////////

// 
params.local_assemblies = "local_assemblies.csv"
params.local_assemblies_tsv = 
params.local_assemblies_link_dir = "local_assemblies_dir"

params.local_sample_sheet = false
params.ncbi_sample_sheet = false

// all databases used by the different scripts should be located in this directory
params.databases_dir = "/data/databases"



//////////////////////////////
///// PROTEIN ANNOTATION /////
//////////////////////////////

params.cog = true
params.interproscan = true
params.uniparc = true
params.tcdb = true
params.string = true
params.pdb = true
params.oma = true
params.ko = true
params.tcdb_gblast = false
params.PRIAM = true
params.psortb = true
params.uniprot_goa = true
params.uniprot_idmapping = true

params.macsyfinder = true
params.effector_prediction = true
params.DeepT3 = true

// retrieve uniprot annotations & scores 
params.uniprot_data = false


//////////////////////////////
///// QUALITY CHECK //////////
//////////////////////////////

params.checkm = true



//////////////////////////////
///// Orthology //////////////
//////////////////////////////

params.orthofinder = true
params.orthofinder_output_dir = "output"

// allow (or not) missing data when identifying single copy core genes
params.core_missing = 0
params.core_genome_phylogeny_with_fasttree = true

// build orthogroup phylogeny
params.orthogroups_phylogeny_with_iqtree = false
params.orthogroups_phylogeny_with_fasttree = true



////////////////////////////////////////////
///// HOMOLOGY SEARCH & PHYLOGENIES ////////
////////////////////////////////////////////

// homology search vs RefSeq and SwissProt
params.blast_swissprot = false
params.plast_refseq = false
params.diamond_refseq = true
params.diamond_refseq_taxonomy = true

// build phylogenies including closest BBH
// possibility to filter BBH based on phylum name
params.refseq_diamond_BBH_phylogeny = true
params.refseq_diamond_BBH_phylogeny_top_n_hits = 4
params.refseq_diamond_BBH_phylogeny_phylum_filter = '["Chlamydiae", "Verrucomicrobia", "Planctomycetes", "Kiritimatiellaeota", "Lentisphaerae"]'

params.interproscan_home = "$params.databases_dir/interproscan/interproscan-latest"


//////////////////////////////
//// Chlamdb setup scripts
//////////////////////////////

params.chlamdb.chlamdb_base= "test"
params.chlamdb.db_name = "George"
params.chlamdb.db_type = "sqlite"
params.chlamdb.psswd = ""
params.chlamdb.db_dir = "db"


//////////////////////////////
///// CONTAINERS CONFIG //////
//////////////////////////////

// Necessary to be able to access the database directory
// in singularity

singularity.runOptions = "--bind /data:/data"
singularity.enabled = true
singularity.cacheDir = "$baseDir/singularity"

// The different containers important for the pipeline
// The container can now be updated by just editing the line here
// instead of having to do it for every process using the container

// Custom containers

params.chlamdb_container = "metagenlab/chlamdb_annotation:1.0.3"
params.checkm_container = "metagenlab/checkm:1.0.20"
params.annotation_container = "metagenlab/annotation-pipeline:1.2.1"
params.psort_container = "metagenlab/psort:3.0.6"
params.blast_container = "quay.io/biocontainers/blast:2.10.1--pl526he19e7b1_3"
params.orthofinder_container = "quay.io/biocontainers/orthofinder:2.5.2--0"


// mainstream containers
params.prokka_container = "quay.io/biocontainers/prokka:1.14.6--pl526_0"
params.iqtree_container = "quay.io/biocontainers/iqtree:2.0.3--h176a8bc_0"
params.blast_container = "quay.io/biocontainers/blast:2.9.0--pl526h3066fca_4"

params.kegg_container = "quay.io/biocontainers/kofamscan:1.3.0--0"



/////////////////////////////
///// EXECUTION CONTROL /////
/////////////////////////////

process.queue = 'normal'

// default number of cpus
// NOTE: setting up a high value may prevent nextflow from parallelizing tasks.
//  if one sets 40, with a limit of cpus of 80 (in executor), only two tasks can be launched
//  in parallel, even if they do not use multithreading (nextflow assumes that when a process is 
//  declared to use 40 cpus, it will use 40 cpus).
process.cpus = 1
params.executor = 'local'

// it is the same problem with setting a limit of memory for each process
// the limit has been removed as Asterix has 400G of memory, but it should
// be adjusted in case less memory is available

executor {
  $lsf {
      queueSize = 100
      pollInterval = '30sec'
  }
  $local {
      cpus = 80
      memory = '32 GB'
  }
}


conda.cacheDir = "$HOME/miniconda3/nextflow"

env {
  // necessary to be able to export the python code out
  // of the main nextflow file
  PYTHONPATH = "$baseDir/bin"

  SQLPSW = "my hovercraft is full of eels"
}

env {
  // necessary to be able to export the python code out
  // of the main nextflow file
  //for dubigging purpose, add the metagenlab_libs path
  PYTHONPATH = "$baseDir/bin:/scratch/hdd2/acarrara/bin/metagenlab_libs/metagenlab_libs/"
}


